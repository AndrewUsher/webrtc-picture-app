{"version":3,"sources":["main.js"],"names":["width","height","filter","streaming","video","document","querySelector","canvas","photos","photoButton","getElementById","clearButton","photoFilter","options","audio","takePicture","ctx","getContext","drawImage","imgUrl","toDataURL","img","createElement","setAttribute","style","appendChild","navigator","mediaDevices","getUserMedia","then","stream","srcObject","play","catch","error","console","log","addEventListener","event","videoHeight","videoWidth","preventDefault","textContent","selectedIndex","target","value"],"mappings":";AAAA,IAAIA,EAAQ,IACRC,EAAS,EACTC,EAAS,OACTC,GAAY,EAEVC,EAAQC,SAASC,cAAc,SAC/BC,EAASF,SAASC,cAAc,UAChCE,EAASH,SAASC,cAAc,WAChCG,EAAcJ,SAASK,eAAe,gBACtCC,EAAcN,SAASK,eAAe,gBACtCE,EAAcP,SAASK,eAAe,gBAEtCG,EAAU,CACdT,OAAO,EACPU,OAAO,GA6CT,SAASC,IACDC,IAAAA,EAAMT,EAAOU,WAAW,MAC1BjB,GAAAA,GAASC,EAAQ,CAEnBM,EAAOP,MAAQA,EACfO,EAAON,OAASA,EAEhBe,EAAIE,UAAUd,EAAO,EAAG,EAAGJ,EAAOC,GAE9BkB,IAAAA,EAASZ,EAAOa,UAAU,aAExBC,EAAMhB,SAASiB,cAAc,OAEnCD,EAAIE,aAAa,MAAOJ,GAExBE,EAAIG,MAAMtB,OAASA,EAEnBM,EAAOiB,YAAYJ,IA5DvBK,UAAUC,aAAaC,aAAaf,GACjCgB,KAAK,SAAAC,GACJ1B,EAAM2B,UAAYD,EAClB1B,EAAM4B,SAEPC,MAAM,SAAAC,GACLC,QAAQC,IAAaF,SAAAA,OAAAA,MAGzB9B,EAAMiC,iBAAiB,UAAW,SAAUC,GACrCnC,IAEHF,EAASG,EAAMmC,aAAenC,EAAMoC,WAAaxC,GAEjDI,EAAMmB,aAAa,QAASvB,GAC5BI,EAAMmB,aAAa,SAAUtB,GAC7BM,EAAOgB,aAAa,QAASvB,GAC7BO,EAAOgB,aAAa,SAAUtB,GAE9BE,GAAY,KAEb,GAEHM,EAAY4B,iBAAiB,QAAS,SAAUC,GAC9CvB,IAEAuB,EAAMG,mBACL,GAEH9B,EAAY0B,iBAAiB,QAAS,SAAAC,GACpC9B,EAAOkC,YAAc,GACrBxC,EAAS,OACTE,EAAMoB,MAAMtB,OAASA,EACrBU,EAAY+B,cAAgB,IAG9B/B,EAAYyB,iBAAiB,SAAU,SAAAC,GACrCpC,EAASoC,EAAMM,OAAOC,MACtBzC,EAAMoB,MAAMtB,OAASA,EAErBoC,EAAMG","file":"main.356ab103.map","sourceRoot":"../src","sourcesContent":["let width = 500\nlet height = 0\nlet filter = 'none'\nlet streaming = false\n\nconst video = document.querySelector('video')\nconst canvas = document.querySelector('canvas')\nconst photos = document.querySelector('.images')\nconst photoButton = document.getElementById('photo-button')\nconst clearButton = document.getElementById('clear-button')\nconst photoFilter = document.getElementById('photo-filter')\n\nconst options = {\n  video: true,\n  audio: false\n}\nnavigator.mediaDevices.getUserMedia(options)\n  .then(stream => {\n    video.srcObject = stream\n    video.play()\n  })\n  .catch(error => {\n    console.log(`Error ${error}`)\n  })\n\nvideo.addEventListener('canplay', function (event) {\n  if (!streaming) {\n    // set canvas height\n    height = video.videoHeight / (video.videoWidth / width)\n\n    video.setAttribute('width', width)\n    video.setAttribute('height', height)\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n\n    streaming = true\n  }\n}, false)\n\nphotoButton.addEventListener('click', function (event) {\n  takePicture()\n\n  event.preventDefault()\n}, false)\n\nclearButton.addEventListener('click', event => {\n  photos.textContent = ''\n  filter = 'none'\n  video.style.filter = filter\n  photoFilter.selectedIndex = 0\n})\n\nphotoFilter.addEventListener('change', event => {\n  filter = event.target.value\n  video.style.filter = filter\n\n  event.preventDefault()\n})\n\nfunction takePicture () {\n  const ctx = canvas.getContext('2d')\n  if (width && height) {\n    // set canvas props\n    canvas.width = width\n    canvas.height = height\n    // draw image of video onto canvas\n    ctx.drawImage(video, 0, 0, width, height)\n    // create image from canvas\n    var imgUrl = canvas.toDataURL('image/png')\n    //\n    const img = document.createElement('img')\n    //\n    img.setAttribute('src', imgUrl)\n\n    img.style.filter = filter\n\n    photos.appendChild(img)\n  }\n}\n"]}